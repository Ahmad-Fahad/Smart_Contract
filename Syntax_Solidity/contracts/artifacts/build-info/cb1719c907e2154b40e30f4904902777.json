{
	"id": "cb1719c907e2154b40e30f4904902777",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/9_Modifier.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >0.4.0 <0.9.0;\r\n\r\ncontract modifier_experiment {\r\n    address owner;\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n    modifier m() {\r\n        if(msg.sender == owner) {\r\n            _;\r\n        }\r\n        else {\r\n            require(msg.sender == owner, \"Sender Must be the owner\");\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/9_Modifier.sol": {
				"modifier_experiment": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/9_Modifier.sol\":71:368  contract modifier_experiment {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/9_Modifier.sol\":127:178  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/9_Modifier.sol\":160:170  msg.sender */\n  caller\n    /* \"contracts/9_Modifier.sol\":152:157  owner */\n  0x00\n  dup1\n    /* \"contracts/9_Modifier.sol\":152:170  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/9_Modifier.sol\":71:368  contract modifier_experiment {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/9_Modifier.sol\":71:368  contract modifier_experiment {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203f89b1d57a9ea589529f9d76a97101f6d532d89193156894380eb9c67a363c7f64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603f80605d6000396000f3fe6080604052600080fdfea26469706673582212203f89b1d57a9ea589529f9d76a97101f6d532d89193156894380eb9c67a363c7f64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3F DUP1 PUSH1 0x5D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH DUP10 0xB1 0xD5 PUSH27 0x9EA589529F9D76A97101F6D532D89193156894380EB9C67A363C7F PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "71:297:0:-:0;;;127:51;;;;;;;;;;160:10;152:5;;:18;;;;;;;;;;;;;;;;;;71:297;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212203f89b1d57a9ea589529f9d76a97101f6d532d89193156894380eb9c67a363c7f64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH DUP10 0xB1 0xD5 PUSH27 0x9EA589529F9D76A97101F6D532D89193156894380EB9C67A363C7F PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "71:297:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "24332",
								"totalCost": "36932"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 71,
									"end": 368,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 71,
									"end": 368,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 71,
									"end": 368,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 127,
									"end": 178,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 127,
									"end": 178,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 127,
									"end": 178,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 127,
									"end": 178,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 127,
									"end": 178,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 127,
									"end": 178,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 178,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 127,
									"end": 178,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 127,
									"end": 178,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 127,
									"end": 178,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 127,
									"end": 178,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 160,
									"end": 170,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 152,
									"end": 157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 152,
									"end": 157,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 152,
									"end": 170,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 152,
									"end": 170,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 152,
									"end": 170,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 152,
									"end": 170,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 152,
									"end": 170,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 152,
									"end": 170,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 152,
									"end": 170,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 152,
									"end": 170,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 152,
									"end": 170,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 152,
									"end": 170,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 152,
									"end": 170,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 152,
									"end": 170,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 152,
									"end": 170,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 152,
									"end": 170,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 152,
									"end": 170,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 71,
									"end": 368,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 71,
									"end": 368,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 368,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 71,
									"end": 368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 368,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f89b1d57a9ea589529f9d76a97101f6d532d89193156894380eb9c67a363c7f64736f6c634300080b0033",
									".code": [
										{
											"begin": 71,
											"end": 368,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 71,
											"end": 368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71,
											"end": 368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 368,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/9_Modifier.sol\":\"modifier_experiment\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/9_Modifier.sol\":{\"keccak256\":\"0x791ad603edbcdd56ede96ae1dd4f3e331000117997f600683f77b1210fcda40a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://788f99324db11bfb6a39fb93f74f6e3e0732da936db5b142b2013068c6939ef4\",\"dweb:/ipfs/QmQ3AXx97gNkJ9sJpG3TUmkwWL31VmZTpSdwS6gedToNzC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/9_Modifier.sol:modifier_experiment",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/9_Modifier.sol": {
				"ast": {
					"absolutePath": "contracts/9_Modifier.sol",
					"exportedSymbols": {
						"modifier_experiment": [
							32
						]
					},
					"id": 33,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.4",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:30:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "modifier_experiment",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 32,
							"linearizedBaseContracts": [
								32
							],
							"name": "modifier_experiment",
							"nameLocation": "80:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "115:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 32,
									"src": "107:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "107:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "141:37:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "152:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "160:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "160:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "152:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "152:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "138:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "141:0:0"
									},
									"scope": 32,
									"src": "127:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "197:168:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 14,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "211:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "211:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 16,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "225:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "211:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 28,
													"nodeType": "Block",
													"src": "275:83:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 21,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "298:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 22,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "298:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 23,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3,
																			"src": "312:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "298:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "53656e646572204d75737420626520746865206f776e6572",
																		"id": 25,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "319:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_666a895628dd670f1156614a6ac5aea47c993a7c4ebc0b5d0496c5e2cefcc199",
																			"typeString": "literal_string \"Sender Must be the owner\""
																		},
																		"value": "Sender Must be the owner"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_666a895628dd670f1156614a6ac5aea47c993a7c4ebc0b5d0496c5e2cefcc199",
																			"typeString": "literal_string \"Sender Must be the owner\""
																		}
																	],
																	"id": 20,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "290:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "290:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 27,
															"nodeType": "ExpressionStatement",
															"src": "290:56:0"
														}
													]
												},
												"id": 29,
												"nodeType": "IfStatement",
												"src": "208:150:0",
												"trueBody": {
													"id": 19,
													"nodeType": "Block",
													"src": "232:28:0",
													"statements": [
														{
															"id": 18,
															"nodeType": "PlaceholderStatement",
															"src": "247:1:0"
														}
													]
												}
											}
										]
									},
									"id": 31,
									"name": "m",
									"nameLocation": "193:1:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "194:2:0"
									},
									"src": "184:181:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 33,
							"src": "71:297:0",
							"usedErrors": []
						}
					],
					"src": "37:331:0"
				},
				"id": 0
			}
		}
	}
}